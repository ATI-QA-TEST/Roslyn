name: Roslyn Analysis Workflow

on:
  push:
    branches:
      - '*release*'

jobs:
  analyze-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout Roslyn repository
        uses: actions/checkout@v2
        with:
          repository: ATI-QA-TEST/Roslyn
          ref: main
          path: Roslyn
          submodules: 'recursive'

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 5.0.x

      - name: Set Project Path
        run: echo "PROJECT_PATH=$(pwd)" >> $GITHUB_ENV

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v38

      - name: Set changed .cs files as environment variable
        run: |
          cs_files=""
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *.cs ]]; then
              cs_files="$cs_files;$file"
              echo "$file added to cs_files"
            fi
          done
          echo "$cs_files"
          echo "CHANGED_FILES=$cs_files" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore Roslyn/RoslynCode/Roslyn.csproj

      - name: Analyze and Create Report File
        run: |
          timestamp=$(TZ="Asia/Seoul" date +"%Y%m%d%H%M")
          reportFolderPath="report" 
          reportFilePath="$reportFolderPath/coding_rule_violation_${timestamp}.txt"  
          mkdir -p "$reportFolderPath"  
          echo "Creating report file: $reportFilePath"
          echo "" > $reportFilePath
          echo "::set-output name=reportFilePath::$reportFilePath"
          echo "REPORT_FILE_PATH=$reportFilePath" >> $GITHUB_ENV
        id: create_report

      - name: Build and Run Roslyn Analysis
        run: |
          REPORT_FILE_PATH="${REPORT_FILE_PATH// /}"
          dotnet run --project Roslyn/RoslynCode/Roslyn.csproj >> $REPORT_FILE_PATH
        env:
          CHANGED_FILES: ${{env.CHANGED_FILES}}
          PROJECT_PATH: ${{ env.PROJECT_PATH }}

      - name: Add Changes to Staging
        run: |
          git add $REPORT_FILE_PATH
        id: add_changes

      - name: Set User Name and Email
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          USER_NAME="${{ github.actor }}"
          USER_EMAIL="${{ github.actor }}@users.noreply.github.com"
          git config user.name "$USER_NAME"
          git config user.email "$USER_EMAIL"

      - name: Commit and Push Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_PATH: ${{ env.PROJECT_PATH }}
        run: |
          branch="${{ github.ref }}"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Add coding standard report"
            git diff-index --quiet HEAD -- ':!roslyn_report.txt' || git commit -m "Add coding standard report"
            git push origin "$branch"
          else
            echo "No changes to commit."
          fi
